exit
expect(response['data'].first['id']).to eq(water.id.to_s)
response["data"].size
response
exit
response["data"].size
response["data"]
response
c
expect(response['links']['last']).not_to be_nil
expect(response['links']['first']).not_to be_nil
response['links']['first']
response['data']
exit
response["data"].size
response["data"]
response
response = JSON.parse(response_body)
response_body
exit
expect(response['data'].first['id']).to eq(water.id.to_s)
response['data'].first
exit
do_request
exit
expect(response['data'].first['id']).to eq(grape_juice.id.to_s)
expect(response['data'].first['id']).to eq(grape_juice.id)
exit
response['data'].first["id"]
response['data'].first
response['data']
exit
response["data"].firstexit
response["data"].first
expect(response["data"][.size).to eq(2)
response
params
exit
response
exit
response["data"].map(:price)
response["data"].tap(:price)
response["data"]
last_request
request_parameters
request_parameteras
parameters
request_method
@request_method
request
response["data"].size
response["data"]
response = JSON.parse(response_body)
exit
sort
'filter[category]'.to_sym
'filter%5Bcategory%5D'.to_sym
request
parameters
response_body
exit
response_body
